{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\damir\\\\Desktop\\\\7 Semestras\\\\MarioRunner\\\\frontend\\\\angularsignalrclient\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\damir\\\\Desktop\\\\7 Semestras\\\\MarioRunner\\\\frontend\\\\angularsignalrclient\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var FoodDataService = /*#__PURE__*/(function () {\n  var FoodDataService = /*#__PURE__*/function () {\n    function FoodDataService(http) {\n      _classCallCheck(this, FoodDataService);\n\n      this.http = http;\n      this.actionUrl = environment.baseUrls.server + environment.baseUrls.apiUrl + 'foodItems/';\n    }\n\n    _createClass(FoodDataService, [{\n      key: \"getAllFood\",\n      value: function getAllFood() {\n        return this.http.get(this.actionUrl).pipe(catchError(this.handleError));\n      }\n    }, {\n      key: \"getSingleFood\",\n      value: function getSingleFood(id) {\n        return this.http.get(this.actionUrl + id).pipe(catchError(this.handleError));\n      }\n    }, {\n      key: \"addFood\",\n      value: function addFood(itemName) {\n        return this.http.post(this.actionUrl, {\n          itemName: itemName\n        }).pipe(catchError(this.handleError));\n      }\n    }, {\n      key: \"updateFood\",\n      value: function updateFood(foodToUpdate) {\n        return this.http.put(this.actionUrl + foodToUpdate.id, foodToUpdate).pipe(catchError(this.handleError));\n      }\n    }, {\n      key: \"deleteFood\",\n      value: function deleteFood(id) {\n        return this.http.delete(this.actionUrl + id).pipe(catchError(this.handleError));\n      }\n    }, {\n      key: \"handleError\",\n      value: function handleError(error) {\n        return throwError(error || 'Server error');\n      }\n    }]);\n\n    return FoodDataService;\n  }();\n\n  FoodDataService.ɵfac = function FoodDataService_Factory(t) {\n    return new (t || FoodDataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  FoodDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FoodDataService,\n    factory: FoodDataService.ɵfac,\n    providedIn: 'root'\n  });\n  return FoodDataService;\n})();","map":null,"metadata":{},"sourceType":"module"}