{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\damir\\\\Desktop\\\\7 Semestras\\\\MarioRunner\\\\frontend\\\\angularsignalrclient\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";\nimport _classCallCheck from \"C:\\\\Users\\\\damir\\\\Desktop\\\\7 Semestras\\\\MarioRunner\\\\frontend\\\\angularsignalrclient\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\damir\\\\Desktop\\\\7 Semestras\\\\MarioRunner\\\\frontend\\\\angularsignalrclient\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { FoodDataService } from '@app/core/services/food-data.service';\nimport { SignalRService } from '@app/core/services/signalR.service';\nimport { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/core/services/signalR.service\";\nimport * as i2 from \"@app/core/services/food-data.service\";\nimport * as i3 from \"../../presentational/chat/chat.component\";\nimport * as i4 from \"@angular/common\";\n\nfunction DashboardComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"Loading...\");\n  }\n}\n\nexport var DashboardComponent = /*#__PURE__*/(function () {\n  var DashboardComponent = /*#__PURE__*/function () {\n    function DashboardComponent(signalRService, foodDataService) {\n      _classCallCheck(this, DashboardComponent);\n\n      this.signalRService = signalRService;\n      this.foodDataService = foodDataService;\n      this.chatmessages = [];\n    }\n\n    _createClass(DashboardComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this = this;\n\n        this.cpuValue$ = this.signalRService.newCpuValue$;\n        this.signalrConnectionEstablished$ = this.signalRService.connectionEstablished$;\n        this.signalRService.foodchanged$.subscribe(function () {\n          return _this.getFoodData();\n        });\n        this.signalRService.messageReceived$.subscribe(function (message) {\n          _this.chatmessages = [].concat(_toConsumableArray(_this.chatmessages), [message]);\n        });\n        this.getFoodData();\n      }\n    }, {\n      key: \"saveFood\",\n      value: function saveFood(item) {\n        if (item.id) {\n          this.foodDataService.updateFood(item).subscribe(function () {\n            return console.log('food updated');\n          });\n        } else {\n          this.foodDataService.addFood(item.itemName).subscribe(function () {\n            return console.log('food added');\n          });\n        }\n      }\n    }, {\n      key: \"deleteFood\",\n      value: function deleteFood(item) {\n        if (!confirm('Really delete?')) {\n          return;\n        }\n\n        this.foodDataService.deleteFood(item.id).subscribe(function () {\n          return console.log('food deleted');\n        });\n      }\n    }, {\n      key: \"sendChat\",\n      value: function sendChat(message) {\n        this.signalRService.sendChatMessage(message);\n      }\n    }, {\n      key: \"getFoodData\",\n      value: function getFoodData() {\n        this.foodItems$ = this.foodDataService.getAllFood();\n      }\n    }]);\n\n    return DashboardComponent;\n  }();\n\n  DashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.SignalRService), i0.ɵɵdirectiveInject(i2.FoodDataService));\n  };\n\n  DashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 7,\n    vars: 4,\n    consts: [[1, \"d-md-flex\", \"flex-md-equal\", \"w-100\", \"my-md-3\", \"pl-md-3\"], [1, \"mr-md-3\", \"pt-3\", \"px-3\", \"pt-md-5\", \"px-md-5\"], [1, \"mx-auto\", \"wrapper\"], [3, \"connectionEstablished\", \"chatmessages\", \"sendChat\"], [\"loading\", \"\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"app-chat\", 3);\n        i0.ɵɵlistener(\"sendChat\", function DashboardComponent_Template_app_chat_sendChat_3_listener($event) {\n          return ctx.sendChat($event);\n        });\n        i0.ɵɵpipe(4, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, DashboardComponent_ng_template_5_Template, 1, 0, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"connectionEstablished\", i0.ɵɵpipeBind1(4, 2, ctx.signalrConnectionEstablished$))(\"chatmessages\", ctx.chatmessages);\n      }\n    },\n    directives: [i3.ChatComponent],\n    pipes: [i4.AsyncPipe],\n    styles: [\".wrapper[_ngcontent-%COMP%]{width:90%;min-height:300px;border-radius:21px 21px 0 0}\"]\n  });\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}